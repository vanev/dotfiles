# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 1
set -g pane-base-index 1
set-option -g renumber-windows on

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0
set-option -g allow-rename off

# Add truecolor support
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Pane controls
bind -r H resize-pane -L 5
bind -r J resize-pane -D 6
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind C-l send-keys 'C-l'

bind-key C-o rotate-window
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window
bind-key [ copy-mode
bind-key ] paste-buffer

# Enable native Mac OS X copy/paste
set-option -g default-command "bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Clunkily connect tmux buffers with the pasteboard.
bind-key y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"


# Status Bar
set-option -g status-interval 1
set-option -g status-left ''
set-option -g status-right '%l:%M%p'

set -g status-justify "left"
set -g status "on"
set -g status-fg white
set -g status-bg default
set -g status-attr none
set -g window-status-current-fg brightwhite
set -g window-status-current-attr bold
# set -g window-status-current-fg brightwhite
# set -g window-status-current-bg "#0000ff" "highlight
set -g window-status-current-attr none
set -g window-status-last-attr none
set -g window-status-last-fg brightblack
set -g window-status-fg brightblack
set -g window-status-activity-fg white # something happened in this window
set -g window-status-activity-bg black # something happened in this window

# Borders
set-option -g pane-active-border-fg black
set-option -g pane-border-fg black

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on
